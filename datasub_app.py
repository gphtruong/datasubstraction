import cv2
import numpy as np
import streamlit as st

st.set_page_config(page_title="Background Subtraction", layout="centered")
st.title("üé• Gh√©p v·∫≠t th·ªÉ t·ª´ ·∫£nh v√†o n·ªÅn b·∫±ng Background Subtraction")

# === Load ·∫£nh (ph·∫£i c√≥ trong th∆∞ m·ª•c)
background = cv2.imread("background.jpg")
current = cv2.imread("current.jpg")

if background is None or current is None:
    st.error("‚ùå Kh√¥ng t√¨m th·∫•y file 'background.jpg' ho·∫∑c 'current.jpg' trong th∆∞ m·ª•c.")
    st.stop()

# === Resize ·∫£nh
background = cv2.resize(background, (640, 480))
current = cv2.resize(current, (640, 480))

# === Chuy·ªÉn sang grayscale
gray_bg = cv2.cvtColor(background, cv2.COLOR_BGR2GRAY)
gray_current = cv2.cvtColor(current, cv2.COLOR_BGR2GRAY)

# === Thanh tr∆∞·ª£t ƒëi·ªÅu ch·ªânh threshold
threshold_value = st.slider("Ng∆∞·ª°ng ph√°t hi·ªán kh√°c bi·ªát (threshold)", 0, 100, 50)

# === Subtraction v√† t·∫°o mask
diff = cv2.absdiff(gray_bg, gray_current)
_, mask = cv2.threshold(diff, threshold_value, 255, cv2.THRESH_BINARY)

# === L√†m m∆∞·ª£t + morphology ƒë·ªÉ l·ªçc nhi·ªÖu
mask_blur = cv2.GaussianBlur(mask, (7, 7), 0)
kernel = np.ones((5, 5), np.uint8)
mask_clean = cv2.morphologyEx(mask_blur, cv2.MORPH_OPEN, kernel)
mask_clean = cv2.dilate(mask_clean, kernel, iterations=1)

# === T·∫°o mask m√†u
mask_3ch = cv2.merge([mask_clean] * 3)

# === Tr√≠ch v·∫≠t th·ªÉ t·ª´ current.jpg
foreground = cv2.bitwise_and(current, mask_3ch)

# === L·∫•y ph·∫ßn n·ªÅn c√≤n l·∫°i t·ª´ background
inv_mask = cv2.bitwise_not(mask_clean)
inv_mask_3ch = cv2.merge([inv_mask] * 3)
background_part = cv2.bitwise_and(background, inv_mask_3ch)

# === Gh√©p ·∫£nh
final = cv2.add(background_part, foreground)

# === Hi·ªÉn th·ªã ·∫£nh
col1, col2 = st.columns(2)
with col1:
    st.image(cv2.cvtColor(background, cv2.COLOR_BGR2RGB), caption="·∫¢nh n·ªÅn (background)", use_column_width=True)
    st.image(mask_clean, caption="Foreground Mask", use_column_width=True)
with col2:
    st.image(cv2.cvtColor(current, cv2.COLOR_BGR2RGB), caption="·∫¢nh c√≥ v·∫≠t th·ªÉ (current)", use_column_width=True)
    st.image(cv2.cvtColor(final, cv2.COLOR_BGR2RGB), caption="·∫¢nh sau khi gh√©p", use_column_width=True)
